version: '3'
services:
    user-service:
      build:
        context: ./user-service
        dockerfile: Dockerfile
      ports:
        - "8000:8000"  # Map container port 9000 to host port 8000
      volumes:
        - ./user-service:/var/www/html
      networks:
        - app-network
      depends_on:
        - redis
      environment:
        - LOG_CHANNEL=custom
        - REDIS_PREFIX=demo
        - CACHE_DRIVER=redis
        - REDIS_CLIENT=predis
        - REDIS_HOST=redis
        - REDIS_PASSWORD=null
        - REDIS_PORT=6379
      command: php -S 0.0.0.0:8000 -t public
        
    notification-service:
      build:
        context: ./notification-service
        dockerfile: Dockerfile
      ports:
        - "9000:9000"  # Map container port 9000 to host port 8000
      volumes:
        - ./notification-service:/var/www/html
      networks:
        - app-network
      depends_on:
        - redis
      environment:
        - LOG_CHANNEL=custom
        - REDIS_PREFIX=demo
        - CACHE_DRIVER=redis
        - REDIS_CLIENT=predis
        - REDIS_HOST=redis
        - REDIS_PASSWORD=null
        - REDIS_PORT=6379
      command: php artisan notifier
    #   command: php -S 0.0.0.0:9000 -t public

    redis:
        image: redis:4.0
        container_name: app_redis
        ports:
            - "6382:6379"
        networks:
            - app-network

    # kafka:
    #     image: wurstmeister/kafka:2.13-3.0.0
    #     ports:
    #     - "9092:9092"
    #     environment:
    #         KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
    #         KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
    #         KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
    #         KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    #         KAFKA_CREATE_TOPICS: "topic_name:1:1"
    #     volumes:
    #     - /var/run/docker.sock:/var/run/docker.sock

networks:
  app-network:
    driver: "bridge"